{"version":3,"sources":["components/CardAction.js","components/Form.js","components/Title.js","components/Card.js","components/Details.js","components/CardItem.js","components/Experience.js","components/Education.js","components/Brick.js","components/Skills.js","components/Interests.js","App.js","index.js"],"names":["CardAction","props","className","onClick","actionIcon","color","Form","useState","inputs","setInputs","onChange","index","event","map","input","ind","value","target","onSubmit","preventDefault","reduce","output","type","id","formType","updatedInputs","forEach","wipeInput","isActive","name","isLabelled","htmlFor","autoComplete","Title","isFormActive","setFormStatus","toggleForm","setName","title","setTitle","defaultProps","Card","icon","header","body","Details","description","phone","email","linkedin","github","setDetails","href","CardItem","isformActive","organisation","onClickTrash","tenure","start","end","Experience","jobs","setJobs","getFormInputs","job","submitForm","startYear","endYear","updatedJobs","newJob","uniqid","removeJob","filter","_","i","Education","schools","setSchools","school","updatedSchools","newSchool","removeSchool","Brick","content","Skills","skills","setSkills","removeBrick","brick","skill","Interests","interests","setInterests","interest","App","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1d40fd1c.chunk.js","sourcesContent":["import React from 'react';\n\nfunction CardAction(props) {\n  return (\n    <button className=\"card-action\" onClick={props.onClick}>\n      <i className={`${props.actionIcon} text-${props.color}`}></i>\n    </button>\n  );\n}\n\nexport default CardAction;\n","import React, { useState } from 'react';\nimport '../styles/form.css';\n\nfunction Form(props) {\n  const [inputs, setInputs] = useState(props.inputs);\n\n  // wipe all form input values\n  const wipeInput = () => {\n    const updatedInputs = [...inputs];\n    updatedInputs.forEach((input) => {\n      if (input.type !== 'submit') input.value = '';\n    });\n    setInputs(updatedInputs);\n  };\n\n  // update inputs array on input change\n  const onChange = (index) => (event) => {\n    setInputs(\n      inputs.map((input, ind) => ({\n        ...input,\n        value: ind === index ? event.target.value : input.value,\n      })),\n    );\n  };\n\n  // pass input ids & values to prop callback\n  const onSubmit = (event) => {\n    event.preventDefault();\n    props.onSubmit(\n      inputs.reduce(\n        (output, { type, id, value }) =>\n          type === 'submit' ? output : { ...output, [id]: value },\n        [],\n      ),\n    );\n    // wipe values for all non-submit inputs\n    if (props.formType === 'add') wipeInput();\n  };\n\n  return (\n    <form\n      onSubmit={onSubmit}\n      className={`generic-form w-100 d-flex flex-column ${\n        props.isActive ? 'active' : 'inactive'\n      }`}\n    >\n      {inputs.map(({ id, name, type, isLabelled, value }, index) => (\n        <div\n          key={`container-${id}`}\n          className=\"form-item d-flex flex-column mb-2\"\n        >\n          {isLabelled ? (\n            <label\n              htmlFor={id}\n              key={`label-${id}`}\n              className=\"px-2 font-weight-bold\"\n            >\n              {name}\n            </label>\n          ) : null}\n          <input\n            type={type}\n            id={id}\n            value={value}\n            onChange={onChange(index)}\n            key={`input-${id}`}\n            autoComplete=\"off\"\n            className=\"px-1 py-2 border-0 rounded\"\n          />\n        </div>\n      ))}\n    </form>\n  );\n}\n\nexport default Form;\n","import React, { useState } from 'react';\nimport CardAction from './CardAction';\nimport Form from './Form';\n\nfunction Title(props) {\n  const [isFormActive, setFormStatus] = useState(false);\n  const toggleForm = () => setFormStatus(!isFormActive);\n  const [name, setName] = useState(props.name);\n  const [title, setTitle] = useState(props.title);\n\n  const getFormInputs = () => [\n    {\n      id: 'name',\n      name: 'Full Name',\n      type: 'text',\n      isLabelled: true,\n      value: name,\n    },\n    {\n      id: 'title',\n      name: 'Job Title',\n      type: 'text',\n      isLabelled: true,\n      value: title,\n    },\n    {\n      id: 'update',\n      name: 'update',\n      type: 'submit',\n      isLabelled: false,\n      value: 'Update',\n    },\n  ];\n\n  const submitForm = (output) => {\n    setName(output.name);\n    setTitle(output.title);\n    toggleForm();\n  };\n\n  return (\n    <div className=\"text-center border-bottom\">\n      <Form\n        inputs={getFormInputs()}\n        onSubmit={submitForm}\n        isActive={isFormActive}\n        formType=\"edit\"\n      />\n      <div className=\"d-flex justify-content-center align-items-start\">\n        <h1 className=\"text-uppercase text-black-75\">{name}</h1>\n        <CardAction\n          actionIcon=\"fas fa-edit\"\n          color=\"black\"\n          onClick={toggleForm}\n        />\n      </div>\n      <p className=\"text-muted font-italic text-capitalize\">{title}</p>\n    </div>\n  );\n}\n\nTitle.defaultProps = {\n  name: 'John Smith',\n  title: 'Magician',\n};\n\nexport default Title;\n","import React from 'react';\nimport CardAction from './CardAction';\nimport '../styles/card.css';\n\nfunction Card(props) {\n  return (\n    <div className=\"cv-card overflow-hidden my-3 shadow-sm bg-light\">\n      <div className=\"cv-card-header d-flex align-items-center text-white\">\n        <i className={`${props.icon} card-icon`}></i>\n        <strong className=\"text-white mr-auto\">{props.header}</strong>\n        <CardAction\n          actionIcon={props.actionIcon}\n          color=\"white\"\n          onClick={props.onClick}\n        />\n      </div>\n      <div className=\"cv-card-body\">{props.body}</div>\n    </div>\n  );\n}\n\nexport default Card;\n","import React, { useState } from 'react';\nimport Card from './Card';\nimport Form from './Form';\nimport '../styles/details.css';\n\nfunction Details(props) {\n  const [isFormActive, setFormStatus] = useState(false);\n  const toggleForm = () => setFormStatus(!isFormActive);\n\n  // initialise details provided through props\n  const [\n    { description, phone, email, linkedin, github },\n    setDetails,\n  ] = useState({ ...props });\n\n  const getFormInputs = () => [\n    {\n      id: 'description',\n      name: 'Description',\n      type: 'text',\n      isLabelled: true,\n      value: description,\n    },\n    {\n      id: 'phone',\n      name: 'Phone Number',\n      type: 'text',\n      isLabelled: true,\n      value: phone,\n    },\n    {\n      id: 'email',\n      name: 'Email',\n      type: 'text',\n      isLabelled: true,\n      value: email,\n    },\n    {\n      id: 'linkedin',\n      name: 'LinkedIn Username',\n      type: 'text',\n      isLabelled: true,\n      value: linkedin,\n    },\n    {\n      id: 'github',\n      name: 'GitHub Username',\n      type: 'text',\n      isLabelled: true,\n      value: github,\n    },\n    {\n      id: 'update',\n      name: 'update',\n      type: 'submit',\n      isLabelled: false,\n      value: 'Update',\n    },\n  ];\n\n  const submitForm = (output) => {\n    setDetails({ ...output });\n    toggleForm();\n  };\n\n  return (\n    <Card\n      header=\"Details\"\n      actionIcon=\"fas fa-edit\"\n      icon=\"fas fa-info-circle\"\n      body={\n        <div className=\"d-flex flex-wrap mx-auto\">\n          <Form\n            inputs={getFormInputs()}\n            onSubmit={submitForm}\n            isActive={isFormActive}\n            formType=\"edit\"\n          />\n          <p>{description}</p>\n          <div className=\"description-link\">\n            <i className=\"fas fa-mobile-alt text-secondary\"></i>\n            {phone}\n          </div>\n          <div className=\"description-link\">\n            <i className=\"far fa-envelope text-secondary\"></i>\n            {email}\n          </div>\n          <div className=\"description-link\">\n            <i className=\"fab fa-linkedin text-secondary\"></i>\n            <a href={`https://linkedin.com/in/${linkedin}`}>{linkedin}</a>\n          </div>\n          <div className=\"description-link\">\n            <i className=\"fab fa-github text-secondary\"></i>\n            <a href={`https://github.com/${github}`}>{github}</a>\n          </div>\n        </div>\n      }\n      onClick={toggleForm}\n    />\n  );\n}\n\nDetails.defaultProps = {\n  description:\n    'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus sit amet tortor eget turpis fringilla malesuada. Cras vulputate vitae sapien sed pellentesque. In at egestas.',\n  phone: '+44 7123 456 789',\n  email: 'jsmith99@gmail.com',\n  linkedin: 'jsmith99',\n  github: 'jsmith99',\n};\n\nexport default Details;\n","import React, { useState } from 'react';\nimport Form from './Form';\nimport '../styles/cardItem.css';\n\nfunction CardItem(props) {\n  const [isformActive, setFormStatus] = useState(false);\n\n  const toggleForm = () => setFormStatus(!isformActive);\n\n  const submitForm = (output) => {\n    props.onSubmit(output);\n    toggleForm();\n  };\n\n  return (\n    <div>\n      <Form\n        inputs={props.inputs}\n        onSubmit={submitForm}\n        isActive={isformActive}\n        formType=\"edit\"\n      />\n      <div className=\"card-item d-flex flex-wrap border-bottom mb-2 align-items-center\">\n        <h2 className=\"organisation text-left\">{props.organisation}</h2>\n        <i className=\"fas fa-edit mx-2\" onClick={toggleForm}></i>\n        <i className=\"fas fa-trash mr-auto\" onClick={props.onClickTrash}></i>\n        <p className=\"dates text-right\">\n          {props.tenure.start} - {props.tenure.end}\n        </p>\n        <p className=\"title w-100 font-italic text-muted\">{props.title}</p>\n        <p className=\"w-100\">{props.description}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default CardItem;\n","import React, { useState } from 'react';\nimport Card from './Card';\nimport CardItem from './CardItem';\nimport Form from './Form';\nimport uniqid from 'uniqid';\n\nfunction Experience(props) {\n  const [isFormActive, setFormStatus] = useState(false);\n  const toggleForm = () => setFormStatus(!isFormActive);\n\n  const [jobs, setJobs] = useState([...props.jobs]);\n\n  const getFormInputs = (index) => {\n    const job = jobs[index] || {\n      organisation: '',\n      title: '',\n      tenure: { start: '', end: '' },\n      description: '',\n    };\n\n    return [\n      {\n        id: 'organisation',\n        name: 'Company',\n        type: 'text',\n        isLabelled: true,\n        value: job.organisation,\n      },\n      {\n        id: 'title',\n        name: 'Job Title',\n        type: 'text',\n        isLabelled: true,\n        value: job.title,\n      },\n      {\n        id: 'startYear',\n        name: 'Start Year',\n        type: 'text',\n        isLabelled: true,\n        value: job.tenure.start,\n      },\n      {\n        id: 'endYear',\n        name: 'End Year',\n        type: 'text',\n        isLabelled: true,\n        value: job.tenure.end,\n      },\n      {\n        id: 'description',\n        name: 'Job Description',\n        type: 'text',\n        isLabelled: true,\n        value: job.description,\n      },\n      {\n        id: 'add',\n        name: 'Add',\n        type: 'submit',\n        isLabelled: false,\n        value: index >= 0 ? 'Update' : 'Add',\n      },\n    ];\n  };\n\n  const submitForm = (index) => ({\n    organisation,\n    startYear,\n    endYear,\n    title,\n    description,\n  }) => {\n    let updatedJobs = [...jobs];\n    const newJob = {\n      id: uniqid(),\n      organisation,\n      tenure: { start: startYear, end: endYear },\n      title,\n      description,\n    };\n\n    if (index === -1) {\n      // add new job\n      updatedJobs = [newJob, ...jobs];\n      toggleForm();\n    } else {\n      // edit pre-existing job\n      updatedJobs[index] = newJob;\n    }\n    setJobs(updatedJobs);\n  };\n\n  const removeJob = (index) => () => {\n    setJobs(jobs.filter((_, i) => i !== index));\n  };\n\n  return (\n    <Card\n      header=\"Experience\"\n      actionIcon=\"fas fa-plus-circle\"\n      onClick={toggleForm}\n      icon=\"fas fa-briefcase\"\n      body={\n        <div>\n          <Form\n            inputs={getFormInputs()}\n            onSubmit={submitForm(-1)}\n            isActive={isFormActive}\n            formType=\"add\"\n          />\n          {jobs.map((job, index) => (\n            <CardItem\n              inputs={getFormInputs(index)}\n              onSubmit={submitForm(index)}\n              onClickTrash={removeJob(index)}\n              organisation={job.organisation}\n              tenure={job.tenure}\n              title={job.title}\n              description={job.description}\n              key={job.id}\n            />\n          ))}\n        </div>\n      }\n    />\n  );\n}\n\nExperience.defaultProps = {\n  jobs: [\n    {\n      id: uniqid(),\n      organisation: 'Magic Co.',\n      tenure: { start: 2017, end: 2020 },\n      title: 'Senior Magician',\n      description:\n        'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.',\n    },\n    {\n      id: uniqid(),\n      organisation: 'Swindle Magicians',\n      tenure: { start: 2014, end: 2017 },\n      title: 'Magician',\n      description:\n        'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.',\n    },\n    {\n      id: uniqid(),\n      organisation: 'Real Magicians',\n      tenure: { start: 2010, end: 2014 },\n      title: 'Intern Magician',\n      description:\n        'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.',\n    },\n  ],\n};\n\nexport default Experience;\n","import React, { useState } from 'react';\nimport Card from './Card';\nimport CardItem from './CardItem';\nimport Form from './Form';\nimport uniqid from 'uniqid';\n\nfunction Education(props) {\n  const [isFormActive, setFormStatus] = useState(false);\n  const toggleForm = () => setFormStatus(!isFormActive);\n  const [schools, setSchools] = useState([...props.schools]);\n\n  const getFormInputs = (index) => {\n    const school = schools[index] || {\n      organisation: '',\n      title: '',\n      tenure: { start: '', end: '' },\n      description: '',\n    };\n\n    return [\n      {\n        id: 'organisation',\n        name: 'School',\n        type: 'text',\n        isLabelled: true,\n        value: school.organisation,\n      },\n      {\n        id: 'title',\n        name: 'Title',\n        type: 'text',\n        isLabelled: true,\n        value: school.title,\n      },\n      {\n        id: 'startYear',\n        name: 'Start Year',\n        type: 'text',\n        isLabelled: true,\n        value: school.tenure.start,\n      },\n      {\n        id: 'endYear',\n        name: 'End Year',\n        type: 'text',\n        isLabelled: true,\n        value: school.tenure.end,\n      },\n      {\n        id: 'description',\n        name: 'Description',\n        type: 'text',\n        isLabelled: true,\n        value: school.description,\n      },\n      {\n        id: 'add',\n        name: 'Add',\n        type: 'submit',\n        isLabelled: false,\n        value: index >= 0 ? 'Update' : 'Add',\n      },\n    ];\n  };\n\n  const submitForm = (index) => ({\n    organisation,\n    startYear,\n    endYear,\n    title,\n    description,\n  }) => {\n    let updatedSchools = [...schools];\n    const newSchool = {\n      id: uniqid(),\n      organisation,\n      tenure: { start: startYear, end: endYear },\n      title,\n      description,\n    };\n\n    if (index === -1) {\n      // add new school\n      updatedSchools = [newSchool, ...schools];\n      toggleForm();\n    } else {\n      // otherwise we are editing a specific experience object\n      updatedSchools[index] = newSchool;\n    }\n    setSchools(updatedSchools);\n  };\n\n  const removeSchool = (index) => () => {\n    setSchools(schools.filter((_, i) => i !== index));\n  };\n\n  return (\n    <Card\n      header=\"Education\"\n      actionIcon=\"fas fa-plus-circle\"\n      onClick={toggleForm}\n      icon=\"fas fa-graduation-cap\"\n      body={\n        <div>\n          <Form\n            inputs={getFormInputs()}\n            onSubmit={submitForm(-1)}\n            isActive={isFormActive}\n            formType=\"add\"\n          />\n          {schools.map((school, index) => (\n            <CardItem\n              inputs={getFormInputs(index)}\n              onSubmit={submitForm(index)}\n              onClickTrash={removeSchool(index)}\n              organisation={school.organisation}\n              tenure={school.tenure}\n              title={school.title}\n              description={school.description}\n              key={school.id}\n            />\n          ))}\n        </div>\n      }\n    />\n  );\n}\n\nEducation.defaultProps = {\n  schools: [\n    {\n      organisation: 'Exceptional Wizards School',\n      tenure: { start: 2000, end: 2010 },\n      title: 'BSC Magical Arts',\n      id: uniqid(),\n      description:\n        'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.',\n    },\n    {\n      organisation: 'Beginner Wizards School',\n      tenure: { start: 1900, end: 2000 },\n      title: 'Magicians Tests',\n      id: uniqid(),\n      description:\n        'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.',\n    },\n  ],\n};\n\nexport default Education;\n","import React from 'react';\nimport '../styles/brick.css';\n\nfunction Brick(props) {\n  return (\n    <div className=\"brick rounded-pill px-3 text-white shadow-sm\">\n      {props.content}\n      <i className=\"delete-brick fas fa-trash\" onClick={props.onClick}></i>\n    </div>\n  );\n}\n\nexport default Brick;\n","import React, { useState } from 'react';\nimport Card from './Card';\nimport Brick from './Brick';\nimport Form from './Form';\nimport uniqid from 'uniqid';\n\nfunction Skills(props) {\n  const [isFormActive, setFormStatus] = useState(false);\n  const toggleForm = () => setFormStatus(!isFormActive);\n  const [skills, setSkills] = useState(props.skills);\n\n  const getFormInputs = (index) => [\n    {\n      id: 'brick',\n      name: 'Skill',\n      type: 'text',\n      isLabelled: true,\n      value: index === -1 ? '' : skills[index],\n    },\n    {\n      id: 'add',\n      name: 'add',\n      type: 'submit',\n      isLabelled: false,\n      value: index === -1 ? 'Add' : 'Update',\n    },\n  ];\n\n  const removeBrick = (index) => () => {\n    setSkills(skills.filter((_, ind) => ind !== index));\n  };\n\n  const submitForm = (output) => {\n    setSkills([...skills, output.brick]);\n    toggleForm();\n  };\n\n  return (\n    <Card\n      header=\"Skills\"\n      actionIcon=\"fas fa-plus-circle\"\n      onClick={toggleForm}\n      icon=\"fas fa-cogs\"\n      body={\n        <div className=\"d-flex flex-wrap justify-content-center\">\n          <Form\n            inputs={getFormInputs(-1)}\n            onSubmit={submitForm}\n            isActive={isFormActive}\n            formType=\"add\"\n          />\n          {skills.map((skill, index) => (\n            <Brick\n              content={skill}\n              onClick={removeBrick(index)}\n              key={uniqid()}\n            />\n          ))}\n        </div>\n      }\n    />\n  );\n}\n\nSkills.defaultProps = {\n  skills: [\n    'Levitation',\n    'Alchemy',\n    'Necromancy',\n    'Spell Casting',\n    'Elemental Magic',\n    'Chaos Magic',\n    'Dark Arts',\n    'Absorption Magic',\n    'Conjuration',\n    'Divination',\n    'Enchantment',\n    'Illusion',\n  ],\n};\n\nexport default Skills;\n","import React, { useState } from 'react';\nimport Card from './Card';\nimport Brick from './Brick';\nimport Form from './Form';\nimport uniqid from 'uniqid';\n\nfunction Interests(props) {\n  const [isFormActive, setFormStatus] = useState(false);\n  const toggleForm = () => setFormStatus(!isFormActive);\n  const [interests, setInterests] = useState(props.interests);\n\n  const getFormInputs = (index) => [\n    {\n      id: 'brick',\n      name: 'Interest',\n      type: 'text',\n      isLabelled: true,\n      value: index === -1 ? '' : interests[index],\n    },\n    {\n      id: 'add',\n      name: 'add',\n      type: 'submit',\n      isLabelled: false,\n      value: index === -1 ? 'Add' : 'Update',\n    },\n  ];\n\n  const removeBrick = (index) => () => {\n    setInterests(interests.filter((_, ind) => ind !== index));\n  };\n\n  const submitForm = (output) => {\n    setInterests([...interests, output.brick]);\n    toggleForm();\n  };\n\n  return (\n    <Card\n      header=\"Interests\"\n      actionIcon=\"fas fa-plus-circle\"\n      onClick={toggleForm}\n      icon=\"fas fa-lightbulb\"\n      body={\n        <div className=\"d-flex flex-wrap justify-content-center\">\n          <Form\n            inputs={getFormInputs(-1)}\n            onSubmit={submitForm}\n            isActive={isFormActive}\n            formType=\"add\"\n          />\n          {interests.map((interest, index) => (\n            <Brick\n              content={interest}\n              onClick={removeBrick(index)}\n              key={uniqid()}\n            />\n          ))}\n        </div>\n      }\n    />\n  );\n}\n\nInterests.defaultProps = {\n  interests: ['Magic', 'Walking', 'Running', 'Reading', 'Swimming'],\n};\n\nexport default Interests;\n","import React from 'react';\nimport Title from './components/Title';\nimport Details from './components/Details';\nimport Experience from './components/Experience';\nimport Education from './components/Education';\nimport Skills from './components/Skills';\nimport Interests from './components/Interests';\nimport './styles/app.css';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"container bg-white my-4 rounded-lg shadow py-3\">\n        <Title />\n        <Details />\n        <Experience />\n        <Education />\n        <Skills />\n        <Interests />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}